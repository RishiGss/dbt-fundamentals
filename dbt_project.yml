
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'jaffle_shop'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the jaffle_shop project
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

# The configurations here apply to all models within the jaffle_shop project.
# jaffle_shop is the name of this dbt project (line number 5 above - name: 'jaffle_shop').
# The + in `+materialized` tells dbt that this configuration applies recursively to all models inside that folder and its subfolders.

# staging models are materialized as views for flexibility.
# intermediate models can be materialized as views or tables based on use case and performance requirements.
# marts are materialized as tables for performance while reporting & in dashboards
# specific models can override these settings using the `{{ config(...) }}` macro within the model file itself.

models:
  jaffle_shop:
    staging:
      +materialized: view
    marts:
      +materialized: table
